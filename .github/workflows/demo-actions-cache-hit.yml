name: Deploy website (actions/cache@v4 node-modules)
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      # caching the dependency
      - name: 'Cache Dependencies'
        uses: 'actions/cache@v4'
        id: cache-node-modules
        with:
          path: 'node_modules'
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        # only run npm ci if cache not found
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v4
      # caching the dependency
      - name: 'Cache Dependencies'
        uses: 'actions/cache@v4'
        id: cache-node-modules
        with:
          path: 'node_modules'
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        # only run npm ci if cache not found
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
          # path: |
          #   dist
          #   package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."
